{"ast":null,"code":"var _jsxFileName = \"/home/forestpe/IT/Projects/React/marvel_functional/src/components/pages/SinglePage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SinglePage = _ref => {\n  _s();\n  let {\n    Component,\n    dataType\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateData();\n  }, [id]);\n  const updateData = () => {\n    clearError();\n    switch (dataType) {\n      case 'comic':\n        getComic(id).then(onDataLoaded);\n        break;\n      case 'character':\n        getCharacter(id).then(onDataLoaded);\n    }\n  };\n  const onDataLoaded = data => {\n    setData(data);\n  };\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 38\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 35\n  }, this) : null;\n  const content = !(loading || error || !data) ? /*#__PURE__*/_jsxDEV(Component, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 56\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), errorMessage, spinner, content]\n  }, void 0, true);\n};\n_s(SinglePage, \"DyrnpQIHeZPpSasAkmXGZJniufQ=\", false, function () {\n  return [useParams, useMarvelService];\n});\n_c = SinglePage;\nexport default SinglePage;\nvar _c;\n$RefreshReg$(_c, \"SinglePage\");","map":{"version":3,"names":["useParams","useState","useEffect","useMarvelService","Spinner","ErrorMessage","AppBanner","jsxDEV","_jsxDEV","Fragment","_Fragment","SinglePage","_ref","_s","Component","dataType","id","data","setData","loading","error","getComic","getCharacter","clearError","updateData","then","onDataLoaded","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","spinner","content","children","_c","$RefreshReg$"],"sources":["/home/forestpe/IT/Projects/React/marvel_functional/src/components/pages/SinglePage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({Component, dataType}) => {\n        const {id} = useParams();\n        const [data, setData] = useState(null);\n        const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n        useEffect(() => {\n            updateData()\n        }, [id])\n\n        const updateData = () => {\n            clearError();\n\n            switch (dataType) {\n                case 'comic':\n                    getComic(id).then(onDataLoaded);\n                    break;\n                case 'character':\n                    getCharacter(id).then(onDataLoaded);\n            }\n        }\n\n        const onDataLoaded = (data) => {\n            setData(data);\n        }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n        return (\n            <>\n                <AppBanner/>\n                {errorMessage}\n                {spinner}\n                {content}\n            </>\n        )\n}\n\nexport default SinglePage;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,UAAU,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC,SAAS;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACjC,MAAM;IAACI;EAAE,CAAC,GAAGhB,SAAS,EAAE;EACxB,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAACkB,OAAO;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGpB,gBAAgB,EAAE;EAE/ED,SAAS,CAAC,MAAM;IACZsB,UAAU,EAAE;EAChB,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrBD,UAAU,EAAE;IAEZ,QAAQR,QAAQ;MACZ,KAAK,OAAO;QACRM,QAAQ,CAACL,EAAE,CAAC,CAACS,IAAI,CAACC,YAAY,CAAC;QAC/B;MACJ,KAAK,WAAW;QACZJ,YAAY,CAACN,EAAE,CAAC,CAACS,IAAI,CAACC,YAAY,CAAC;IAAC;EAEhD,CAAC;EAED,MAAMA,YAAY,GAAIT,IAAI,IAAK;IAC3BC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAED,MAAMU,YAAY,GAAGP,KAAK,gBAAGZ,OAAA,CAACH,YAAY;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE,GAAG,IAAI;EACnD,MAAMC,OAAO,GAAGb,OAAO,gBAAGX,OAAA,CAACJ,OAAO;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE,GAAG,IAAI;EAC3C,MAAME,OAAO,GAAG,EAAEd,OAAO,IAAIC,KAAK,IAAI,CAACH,IAAI,CAAC,gBAAGT,OAAA,CAACM,SAAS;IAACG,IAAI,EAAEA;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE,GAAG,IAAI;EAE9E,oBACIvB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA,CAACF,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EACXJ,YAAY,EACZK,OAAO,EACPC,OAAO;EAAA,gBACT;AAEf,CAAC;AAAApB,EAAA,CArCKF,UAAU;EAAA,QACKX,SAAS,EAEuCG,gBAAgB;AAAA;AAAAgC,EAAA,GAH/ExB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}