{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from '../hooks/http.hook';\nconst useMarvelService = () => {\n  _s();\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=fdaca32c78165a624969e27dbb327137';\n  const _baseOffset = 210;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"No description of this character.\",\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items.slice(0, 10)\n    };\n  };\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    };\n  };\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic\n  };\n};\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","_s","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","arguments","length","undefined","res","data","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","title","pageCount","language","textObjects","price","prices"],"sources":["/home/forestpe/IT/Projects/React/marvel_functional/src/services/MarvelService.js"],"sourcesContent":["import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=fdaca32c78165a624969e27dbb327137';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);  \n    }\n\n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n    \n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"No description of this character.\",\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items.slice(0, 10)\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n        }\n    }\n\n    return {\n        loading, \n        error, \n        clearError, \n        getAllCharacters, \n        getCharacterByName,\n        getCharacter, \n        getAllComics, \n        getComic\n    };\n\n}\n\nexport default useMarvelService;"],"mappings":"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"},"metadata":{},"sourceType":"module"}